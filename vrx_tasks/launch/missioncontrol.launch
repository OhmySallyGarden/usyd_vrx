<launch>
    <!-- Since we can only have one entry point for the competition, the entrypoint (i.e. roslaunch this file) 
    should contain everything needed to run the boat. Hence all the stuff. ~Steven -->
    
    <!-- include the official gazebo file -->
    <arg name="thrust_config" default="T" />
    <!-- Boat controls -->
    <group ns="wamv">
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <param name="publish_frequency" value="30" />
        </node>
        <!-- Boat odometry -->
        <node name="odom_to_tf" pkg="vrx_navigation" type="odom_to_tf.py" output="screen">
            <param name="~inTopic" value="sensors/position/p3d_wamv"></param>
        </node>
    </group>


    <include file="$(find vrx_control)/launch/course_controller.launch">
        <arg name="thrust_config" value="$(arg thrust_config)" />
    </include>
    <node pkg="vrx_tasks" type="missionControl.py" name="missioncontrol" output="screen">
    </node>
    <include file="$(find vrx_waypoints)/launch/waypoint_follower.launch" />

    <!-- station_keeping -->
    <!-- Translate from geo pose to normal pose -->
    <node pkg="vrx_tasks" type="geoPoseToPose.py" name="gpstranslate" output="screen">
        <param name="~inTopic" value="vrx/station_keeping/goal"></param>
        <param name="~outTopic" value="internal/poses"></param>
    </node>
    <!-- Translate from normal course to vrx pose -->
    <node pkg="vrx_tasks" type="poseToCourse.py" name="pathCtranslate" output="screen">
        <param name="~inTopic" value="internal/poses"></param>
    </node>

    <!-- wayfinding -->
    <!-- Translate from geo path to normal path -->
    <node pkg="vrx_tasks" type="geoPathToPath.py" name="gpctranslate" output="screen">
        <param name="~inTopic" value="vrx/wayfinding/waypoints"></param>
        <param name="~outTopic" value="internal/waypoints"></param>
    </node>
    <!-- Translate from normal path to vrx path -->
    <node pkg="vrx_tasks" type="pathToRoute.py" name="pathRtranslate" output="screen">
        <param name="~inTopic" value="internal/waypoints"></param>
    </node>

    <!-- Vision translation -->
    <node pkg="vrx_tasks" type="perceptionConverter.py" name="perceptionConverter" output="screen">
        <param name="~inTopic" value="internal/waypoints"></param>
    </node>
    <!--TODO:-->
</launch>
